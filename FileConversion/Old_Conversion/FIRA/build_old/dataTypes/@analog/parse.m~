function continue_ = parse(a)
% function continue_ = parse(a)
%
% Parse method for class analog. Actually
%   does nothing but call the analog parsing
%   function stored in FIRA.raw.analog.func
%
% Input:
%   a ... the analog object
%
% Output:
%   return flag
%   also reads FIRA.raw.trial and FIRA.raw.analog
%   and fills FIRA.analog

% Copyright 2005 by Joshua I. Gold
%   University of Pennsylvania

global FIRA

% return flag
continue_ = true;

% call the parsing routine
if ~isempty(FIRA.raw.analog.func)
    feval(FIRA.raw.analog.func);
end

% useful variables
trial = FIRA.raw.trial.good_count;
ch    = find([FIRA.analog.data(gc,:).length] ~= 0);
if isempty(ch)
    return
end

% possibly resample
if ~isempty(a.resample)
    for aa = ch
        if FIRA.analog.store_rate(aa) ~= FIRA.analog.acquire_rate(aa)
            FIRA.analog.data(trial, aa).values = ...
                resample(FIRA.analog.data(trial, aa).values, ...
                FIRA.analog.store_rate(aa), FIRA.analog.acquire_rate(aa));
            FIRA.analog.data(trial, aa).length = ...
                length(FIRA.analog.data(trial, aa).values);
        end
    end
end

% possibly rezero
if ~isempty(FIRA.raw.analog.params.rezero_array)
    for aa = 1:size(FIRA.raw.analog.params.rezero_array, 2

        % check that we have appropriate analog data
        if FIRA.analog.data(trial, aa).length) > 0

            % get the sample number in the analog data array corresponding
            % to the time of fp offset
            offset_sample = ceil((FIRA.ecodes.data(trial, ...
                strcmp(FIRA.analog.zero{1,aa}, FIRA.ecodes.name)) - ...
                FIRA.analog.data(trial, 1).start_time) * ...
                FIRA.analog.store_rate(aa)/1000);

            % check for enough data
            if isfinite(offset_sample) && ...
                    FIRA.analog.data(trial, aa).length >= offset_sample
                
                % re-calibrate eye position
                FIRA.analog.data(trial, aa).values = ...
                    FIRA.analog.data(trial, aa).values - ...
                    mean(FIRA.analog.data(trial, aa).values(offset_sample-a.rezero_samples:offset_sample)) + ...
                    FIRA.ecodes.data(trial, strcmp(FIRA.analog.zero{2,aa}, FIRA.ecodes.name));
            
    
end
