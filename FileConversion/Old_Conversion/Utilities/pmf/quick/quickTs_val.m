function p_ = quickTs_val(data, alpha, as, aT, beta, bs, bT, guess, lapse)% function p_ = quickTs_val(data, alpha, as, aT, beta, bs, bT, guess, lapse)%% Computes TIME-based quick function%   (0.5 + guess) + (1 - (0.5 + guess) - lapse) * %               (1 - exp(-(C/alpha_t).^beta_t))%%   where%       alpha_t is defined by inline function alpha(alpha_params)%       beta_t  is defined by inline function beta(beta_params)%%   at values in "data":%       data(1)   ... coh (%)%       data(2)   ... time (s)%       data(3)   ... dot dir (-1/1)%       data(4)   ... correct (1) / error (0)%% see also quickTs_fit and quickTs_errif aT    al = feval(alpha, data(:, 2), as);else    al = feval(alpha, as);endif bT    be = feval(beta, data(:, 2), bs);else    be = feval(beta, bs);endgamma = 0.5 + data(:,3).*guess;p_    = gamma + (1 - gamma - lapse) .* (1 - exp(-(data(:,1)./al).^be));