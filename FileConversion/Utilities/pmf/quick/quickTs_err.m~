function err_ = quickTs_err(fits, data, alpha, num_as, aT, ...    beta, num_bs, bT, guess, lapse)%function err_ = quickTs_err(fits, data, alpha, num_as, aT, ...%    beta, num_bs, bT, guess, lapse)%% Computes the error of the Time-dependent Quick function %   fit, given the Quick parameters ("fits"), the data,%   handles to time-dependent functions for alpha and beta,%   and (optional) fixed values of guess, lapse rates% Used by fmincon.% See quickTs_val for more information on how alpha_fun and%   beta_fun are used%% Arguments:%   fits  ... the vector of n Quick parameters. %       First  set is "num_alphas" parameters for alpha_fun%       Second set is "num_betas"  parameters for beta_fun%       Next-to-last parameter is guess rate%       Last parameter is lapse rate%   data ... rows are trials, 4 columns are:%       data(1) = coh  (0 .. 99.9%)%       data(2) = time (fraction of total)%       data(3) = dot dir: left (-1) / right (1)%       data(4) = correct (1) / error (0)%%% Returns:%	err_ ... the negative of the log likelihood of obtaining the data %					using the given parameters.%ps = quickTs_val(data(:, 1:end-1), alpha, fits(1:num_as), aT, ...    beta, fits(num_as+fits, alpha_fun, num_alphas, ...    beta_fun, num_betas);% Now calculate the joint probability of obtaining the data set conceived as%   a list of Bernoulli trials.  This is just ps for trials = 1 (correct) and %   1-ps for trials of 0 (error).% Avoid log 0ps(ps==0) = 0.0001;ps(ps==1) = 1 - 0.0001;err_      = -sum(log([ps(data(:,end)==1); 1-ps(data(:,end)==0)]));