function p_ = quickT4_val(data, fits)% function p_ = quickT4_val(data, fits)%% Computes TIME-based quick function%   (0.5 + guess) + (1 - (0.5 + guess) - lapse) * %               (1 - exp(-(C/alpha_t).^beta_t))%%   where%       alpha_t = 1/(A * T^m)%       beta_t  = B * T^n%%   at values in "data":%       data(1)   ... coh (%)%       data(2)   ... time (s)%       data(3)   ... dot dir (-1/1)%       data(4)   ... correct (1) / error (0)%%   given parameters in "fits":%       fits(1) ... A     (coh scale)%       fits(2) ... m     (coh exponent)%       fits(3) ... B     (time scale, left)%       fits(4) ... n     (time exponent)%       fits(5) ... guess%       fits(6) ... lapse%% see also quickT4_fit and quickT4_errgamma = 0.5 + data(:,3).*fits(5);p_    = gamma + (1 - gamma - fits(6)) .* (1 - ...    exp(-(data(:,1).*fits(1).*data(:,2).^fits(2)).^ ...    (fits(3).*data(:,2).^fits(4)))); 