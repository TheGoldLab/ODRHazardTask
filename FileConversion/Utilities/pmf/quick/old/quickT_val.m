function p_ = quickT_val(data, params)% function p_ = quickT_val(data, params)%% Computes TIME-based quick function%   gamma + (1 - gamma - lambda) * (1 - exp(-(C/alpha_t).^beta_t))%%   where%       alpha_t = 1/(A * T^n)%       beta_t  = B * T^m%%   at values in "data":%       data(1)   ... coh (%)%       data(2)   ... time (s)%       data(3)   ... dot dir (-1/1)%       data(4)   ... correct (1) / error (0)%%   given parameters in "params":%       params(1) ... gamma ("guess")%       params(2) ... lambda ("lapse")%       params(3) ... A_left  (coh scale, left)%       params(4) ... A_right (coh scale, right)%       params(5) ... n       (coh exponent)%       params(6) ... B_left  (time scale, left)%       params(7) ... B_right (time scale, right)%       params(8) ... m       (time exponent)% see also quickT_fit and quickT_errgamma = 0.5 + data(:,3).*params(1);sel   = double(data(:,3)>0);p_    = gamma + (1 - gamma - params(2)) .* (1 - ...    exp(-(data(:,1).*params(sel+3).*data(:,2).^params(5)).^ ...    (params(sel+6).*data(:,2).^params(8)))); 