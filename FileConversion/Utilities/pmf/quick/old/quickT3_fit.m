function [fits_, sems_, preds_, resids_, residCs_, llik_] = ...    quickT3_fit(data)% function [fits_, sems_, preds_, resids_, residCs_, llik_] = ...%    quickT3_fit(data)%% QUICKT3_FIT fits a weibull function to psychometric data using%   maximum likelihood maximization under binomial assumptions. It uses%   quickT3_err for error calculation.%% 	Input values are:%     data, in 3 columns...%		         data(1) = coh  (0 .. 99.9%)%                data(2) = time (seconds)%                data(3) = dot dir (-1/1)%                data(4) = correct (1) / error (0)%% 	Return values are:%		fits ... see quickT3_val for details%           fits(1) ... gamma ("guess")%       	fits(2) ... lambda ("lapse")%       	fits(3) ... A_left  (coh scale, left)%       	fits(4) ... A_right (coh scale, right)%           fits(5) ... n       (coh exponent)%           fits(6) ... B       (time scale, left)%       	fits(7) ... m       (time exponent)%       sems    ... Standard errors of the fits. Approximated using the%                   numerical HESSIAN returned by fmincon (default)%                   or monte carlo method (if error_type is given)%       preds   ... A vector of the probability of making a correct choice given%                   the fit%       resids  ... log diff between model and actual outcomes%       residCs ... log diff between model and actual choices (see below)%       llik    ... The log likelihood of obtaining the data give the fitglobal Data;if nargin < 1 || isempty(data)    return;endData = data;%% do the fit[fits,f,e,o,l,g,H] = fmincon('quickT3_err', ...    [  0.0 0.0  0.05  0.05   0.5 0.01 0.01 ]', [], [], [], [], ...    [ -0.4 0.0  0.001 0.001  0   0.01 0 ]', ...    [  0.4 0.5  5     5      3   5    3 ]', [], ...    optimset('LargeScale', 'off', 'Display', 'off', 'Diagnostics', 'off'));% return the fitsif nargout > 0    fits_ = fits;end% standard errors% The covariance matrix is the negative of the inverse of the % hessian of the natural logarithm of the probability of observing % the data set given the optimal parameters.% For now, use the numerically-estimated HESSIAN returned by fmincon% (which remember is computed from -log likelihood)if nargout > 1    % -H because we used -logL in quick_err    sems_ = sqrt(diag(-((-H)^(-1))));end% return the predicted probability (of a correct response) for each observationif nargout > 2    preds_ = quickT3_val(Data(:,1:end-1), fits);end% residualsif nargout > 3        resids_ = 1-preds_;    resids_(Data(:,4)==0) = -preds_(Data(:,4)==0);    resids_ = sign(resids_).*log(abs(resids_));end% choice residualsif nargout > 4        residCs_ = resids_;end% return log likelihoodif nargout > 5        llik_ = -quickT3_err(fits);end