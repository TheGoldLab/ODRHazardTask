function vals_ = quick6a(fits, data, min_t)
% function vals_ = quick5c(fits, data, min_t)
%
% Computes TIME-based Quick (cumulative Weibull)
%   function:
%   
%   (0.5 + bias) + (1 - (0.5 + bias) - lambda) * 
%       (1 - exp(-(COH/alpha_t).^beta))
%
%  Where
%   alpha_t = Asymptote./exp((TIME-MIN_TIME)./Tau)
%
%  At values in "data":
%       data(1)   ... COH (%)
%       data(2)   ... TIME (sec)
%       data(3)   ... dot dir (-1/1)
%
%   given parameters in "fits":
%       fits(1) ... Asymptote (lower, y)
%       fits(2) ... Tau
%       fits(3) ... Beta   (slope)
%       fits(4) ... bias   (signed offset)
%       fits(5) ... lambda ("lapse")

% return initial values (init, min, max)
if nargin < 1
    
    vals_ = [ ...
        0.08  0.00001  1;  ...
        100   50       200;  ...
        1.4   0       12;  ...
        0  -0.45       0.45;  ...
        0     0        0.45];

else

    alpha_t = fits(1)./exp((data(:,2)-min(data(:,2)
    
    vals_ = 0.5 + fits(4).*data(:,3) + ...
        (0.5 - fits(4).*data(:,3) - fits(5)) .* ...
        (1 - exp(-(data(:,1).* ...
        (fits(1).*data(:,2).^fits(2))).^fits(3)));
end
